ConnectDB:
	Scaffold-DbContext "" Microsoft.EntityFrameworkCore.SqlServer -OutputDir Models

Màu textbox:
	FontFamily="Times New Roman" Foreground="Blue"

Button:
	 Template="{StaticResource Template_btn}"

Header:
     <Window.Resources>
        <ControlTemplate x:Key="Template_btn" TargetType="Button">
            <Grid>
                <Ellipse Fill="YellowGreen"></Ellipse>
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Grid>
        </ControlTemplate>
        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>
    </Window.Resources>


TextBox:
        <TextBox Text="{Binding SelectedItem.MaBn, ElementName=listBN, Mode=OneWay}"/>



LoadItems khi khởi tạo:
	private void LoadItems()
        {
            var query = from bn in ql.BenhNhans
                        orderby bn.SoNgayNamVien descending
                        select bn;

            listBN.ItemsSource = query.ToList();
        }

        private void LoadCombobox()
        {
            var query = from kh in ql.Khoas
                        select kh.TenKhoa;
            cbKhoaKham.ItemsSource = query.ToList();
            cbKhoaKham.SelectedIndex = 0;
        }



Hàm Clear:
	private void Clear()
        {
            txtHoTen.Clear();
            txtMaBN.Clear();
            txtSoNgayNamVien.Clear();
            cbKhoaKham.SelectedIndex = 0;
        }


Hàm Selection Change:
	private void Handle_Selection_Change(object sender, SelectionChangedEventArgs e)
        {
            var benhnhan = listBN.SelectedItem;
            if (benhnhan != null)
            {
                var maKhoa = (listBN.SelectedCells[2].Column.GetCellContent(benhnhan) as TextBlock).Text;

                var tenKhoa = (from kh in ql.Khoas
                             where kh.MaKhoa.ToString() == maKhoa
                             select kh.TenKhoa).Single();

                cbKhoaKham.SelectedItem = tenKhoa.ToString();
            }
        }


Hàm Thêm:
	private bool check()
        {
            if (string.IsNullOrEmpty(txtHoTen.Text) || string.IsNullOrEmpty(txtSoNgayNamVien.Text) || string.IsNullOrEmpty(txtMaBN.Text))
                return false;
            return true;
        }


        private void btnThem_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                if (!check())
                    throw new Exception("Khong duoc bo trong du lieu");

                int maSP, DonGia, SLB;
                bool check1 = Int32.TryParse(txtMaSp.Text, out maSP);
                bool check2 = Int32.TryParse(txtDonGia.Text, out DonGia);
                bool check3 = Int32.TryParse(txtSoLuongBan.Text, out SLB);

                if(!check1)
                    throw new Exception("Ma SP khong dung kieu du lieu");
                if (!check2)
                    throw new Exception("Don Gia SP khong dung kieu du lieu");
                if (!check3)
                    throw new Exception("So Luong ban SP khong dung kieu du lieu");

                if (int.Parse(txtSoLuongBan.Text) < 1)
                    throw new Exception("So luong ban phai >= 1");

                var spham = (from sp in ql.SanPhams
                             where sp.MaSp == int.Parse(txtMaSp.Text)
                             select sp).SingleOrDefault();
                if (spham != null)
                    throw new Exception("Ma san pham khong duoc trung");

                var maNH = (from nh in ql.NhomHangs
                            where nh.TenNhomHang == cbNhomHang.Text
                            select nh.MaNhomHang).SingleOrDefault();

                SanPham s = new SanPham();
                s.MaSp = maSP;
                s.TenSanPham = txtTenSP.Text;
                s.DonGia = DonGia;
                s.SoLuongBan = SLB;
                s.MaNhomHang = Convert.ToInt32(maNH);
                s.TienBan = int.Parse(txtDonGia.Text) * int.Parse(txtSoLuongBan.Text);

                ql.SanPhams.Add(s);
                ql.SaveChanges();
                LoadItem();

                Clear();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Loi");
            }
        }


Hàm sửa:

	private void btnSua_Click(object sender, RoutedEventArgs e)
        {
            var spham = (from sp in ql.SanPhams
                         where sp.MaSp == int.Parse(txtMaSP.Text)
                         select sp).SingleOrDefault();


            var maNH = (from nh in ql.NhomHangs
                        where nh.TenNhomHang == cbNhomHang.Text
                        select nh.MaNhomHang).SingleOrDefault();


            spham.TenSanPham = txtTenSP.Text;
            spham.DonGia = int.Parse(txtDonGia.Text);
            spham.SoLuongBan = int.Parse(txtSoLuongBan.Text);
            spham.MaNhomHang = Convert.ToInt32(maNH);

            ql.SaveChanges();
            LoadItem();

            Clear();
        }


Hàm xóa:

 	private void btnXoa_Click(object sender, RoutedEventArgs e)
        {

            var item = listSP.SelectedItem;
            try
            {
                if (item == null)
                    throw new Exception("Ban chua chon san pham nao de xoa");

                MessageBoxButton buttons = MessageBoxButton.YesNo;
                MessageBoxResult result = MessageBox.Show("Ban co muon xoa san pham hay k?", "Xac nhan", buttons);

                if (result == MessageBoxResult.Yes)
                {
                    var spham = (from sp in ql.SanPhams
                                 where sp.MaSp == int.Parse(txtMaSP.Text)
                                 select sp).SingleOrDefault();

                    ql.SanPhams.Remove(spham);
                    ql.SaveChanges();

                    LoadItem();
                    Clear();
                }
                

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Loi");
            }

        }
